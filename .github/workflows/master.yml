name: CI/CD FastAPI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_project_mgmt
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      # You can map from GitHub secrets or fallback values
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      ENV_FILE: .env

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Initialize test database schema
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -d test_db -f sql/schema.sql


      - name: Initialize database schema for main database
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -d db -f sql/schema.sql
        
      - name: Create test database
        run: |
         PGPASSWORD=postgres psql -h localhost -U postgres -d project_mgmt -c "CREATE DATABASE test_project_mgmt;"

      - name: Initialize database schema for test database
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -d test_project_mgmt -f sql/schema.sql

      - name: Run tests with pytest
        run: pytest -v

      - name: Deleting testdatabase if unit tests were passed
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -d project_mgmt -c "DROP DATABASE test_project_mgmt;"

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:latest
